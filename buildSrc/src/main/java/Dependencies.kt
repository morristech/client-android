
object Versions {
    val kotlin = "1.2.21"
    val gradle = "3.0.1"
    val dex_count = "0.8.2"
    val gson = "2.8.2"
    val okhttp = "3.9.0"
    val retrofit = "2.3.0"
    val converter_gson = "2.3.0"
    val adapter_rxjava2 = "2.3.0"
    val logging_interceptor = "3.9.0"
    val room_runtime = "1.0.0"
    val room_rxjava2 = "1.0.0"
    val room_compiler = "1.0.0"
    val junit = "4.12"
    val mockito_core = "2.12.0"
    val test_runner = "1.0.1"
    val room_testing = "1.0.0"
    val rxJava = "2.1.5"
    val rxAndroid = "2.0.1"
    val dagger = "2.12"
    val timber = "4.5.0"
    val support_lib = "27.1.0"
    val bottom_navigation = "2.1.0"
    val rxRelay = "2.0.0"
    val core_ktx = "0.2"
    val multidex = "1.0.3"
    val picasso = "2.5.2"
    val picasso2_okhttp3_downloader = "1.1.0"
    val leakcanary_android = "1.5.4"
    val stetho = "1.5.0"
    val stetho_okhttp3 = "1.5.0"
    val mixpanel_android = "5.1.4"
    val reactivenetwork_rx2 = "0.12.1"
    val runner = "1.0.1"
    val test_rules = "1.0.1"
    val espresso_core = "3.0.1"
    val dexmaker = "1.2"
    val dexmaker_mockito = "1.2"

}

object Deps {
    val kotlin_stdLib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    val build_gradle = "com.android.tools.build:gradle:${Versions.gradle}"
    val dex_count = "com.getkeepsafe.dexcount:dexcount-gradle-plugin:${Versions.dex_count}"
    val gson = "com.google.code.gson:gson:${Versions.gson}"
    val okhttp = "com.squareup.okhttp3:okhttp:${Versions.okhttp}"
    val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    val converter_gson = "com.squareup.retrofit2:converter-gson:${Versions.converter_gson}"
    val adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:${Versions.adapter_rxjava2}"
    val logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${Versions.logging_interceptor}"
    val room_runtime = "android.arch.persistence.room:runtime:${Versions.room_runtime}"
    val room_rxjava2 = "android.arch.persistence.room:rxjava2:${Versions.room_rxjava2}"
    val room_compiler = "android.arch.persistence.room:compiler:${Versions.room_compiler}"
    val junit = "junit:junit:${Versions.junit}"
    val mockito_core = "org.mockito:mockito-core:${Versions.mockito_core}"
    val test_runner = "com.android.support.test:runner:${Versions.test_runner}"
    val room_testing = "android.arch.persistence.room:testing:${Versions.room_testing}"
    val rxJava = "io.reactivex.rxjava2:rxjava:${Versions.rxJava}"
    val rxAndroid = "io.reactivex.rxjava2:rxandroid:${Versions.rxAndroid}"
    val dagger = "com.google.dagger:dagger:${Versions.dagger}"
    val dagger_compiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    val appCompat_v7 = "com.android.support:appcompat-v7:${Versions.support_lib}"
    val support_v4 = "com.android.support:support-v4:${Versions.support_lib}"
    val recyclerview_v7 = "com.android.support:recyclerview-v7:${Versions.support_lib}"
    val cardview_v7 = "com.android.support:cardview-v7:${Versions.support_lib}"
    val support_annotations = "com.android.support:support-annotations:${Versions.support_lib}"
    val design = "com.android.support:design:${Versions.support_lib}"
    val bottom_navigation = "com.aurelhubert:ahbottomnavigation:${Versions.bottom_navigation}"
    val rxrelay = "com.jakewharton.rxrelay2:rxrelay:${Versions.rxRelay}"
    val core_ktx = "androidx.core:core-ktx:${Versions.core_ktx}"
    val multidex = "com.android.support:multidex:${Versions.multidex}"
    val picasso = "com.squareup.picasso:picasso:${Versions.picasso}"
    val picasso2_okhttp3_downloader = "com.jakewharton.picasso:picasso2-okhttp3-downloader:${Versions.picasso2_okhttp3_downloader}"
    val leakcanary_android = "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanary_android}"
    val stetho = "com.facebook.stetho:stetho:${Versions.stetho}"
    val stetho_okhttp3 = "com.facebook.stetho:stetho-okhttp3:${Versions.stetho_okhttp3}"
    val mixpanel_android = "com.mixpanel.android:mixpanel-android:${Versions.mixpanel_android}"
    val reactivenetwork_rx2 = "com.github.pwittchen:reactivenetwork-rx2:${Versions.reactivenetwork_rx2}"
    val runner = "com.android.support.test:runner:${Versions.runner}"
    val test_rules = "com.android.support.test:rules:${Versions.test_rules}"
    val espresso_core = "com.android.support.test.espresso:espresso-core:${Versions.espresso_core}"
    val dexmaker = "com.google.dexmaker:dexmaker:${Versions.dexmaker}"
    val dexmaker_mockito = "com.google.dexmaker:dexmaker-mockito:${Versions.dexmaker_mockito}"
}
